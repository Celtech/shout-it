name: Run unit tests
on: [push]
jobs:
  test:
    name: Tests & Linting
    runs-on: ubuntu-20.04
    steps:
      - name: Checking out code from the repository
        uses: actions/checkout@v3

      - name: Setting up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Lint code
        run: |
          yarn lint

      - name: Test with Jest
        run: |
          yarn test
  build-app:
    name: Build and publish App
    runs-on: ubuntu-20.04
    needs: [ test ]
    env:
      REPO: shoutitbot/app
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }}
          -p ${{ secrets.DOCKER_PASS }}
      - name: Build App Docker image
        run: docker build --target app -t shoutitbot/app:latest -f docker/Dockerfile . --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') --build-arg VCS_REF=$(git rev-parse --short HEAD) --build-arg BUILD_VERSION=latest
      - name: Publish App Docker image
        run: docker push shoutitbot/app:latest
  build-api:
    name: Build and publish API
    runs-on: ubuntu-20.04
    needs: [ test ]
    env:
      REPO: shoutitbot/api
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }}
          -p ${{ secrets.DOCKER_PASS }}
      - name: Build API Docker image
        run: docker build --target api -t shoutitbot/api:latest -f docker/Dockerfile . --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') --build-arg VCS_REF=$(git rev-parse --short HEAD) --build-arg BUILD_VERSION=latest
      - name: Publish API Docker image
        run: docker push shoutitbot/api:latest
