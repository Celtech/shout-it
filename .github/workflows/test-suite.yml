name: Run unit tests
on: [push]
jobs:
  test:
    name: Tests & Linting
    runs-on: ubuntu-20.04
    steps:
      - name: Checking out code from the repository
        uses: actions/checkout@v3

      - name: Setting up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Lint code
        run: |
          yarn lint

      - name: Test with Jest
        run: |
          yarn test
  build-app:
    name: Build and publish App
    runs-on: ubuntu-20.04
    needs: [ test ]
    env:
      REPO: shoutitbot/app
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }}
          -p ${{ secrets.DOCKER_PASS }}
      - name: Build App Docker image
        run: |
          docker build --target app -t shoutitbot/app:latest -f docker/Dockerfile . --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') --build-arg VCS_REF=$(git rev-parse --short HEAD) --build-arg BUILD_VERSION=latest
      - name: Publish App Docker image
        run: docker push shoutitbot/app:latest
  build-api:
    name: Build and publish API
    runs-on: ubuntu-20.04
    needs: [ test ]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      # And make it available for builds
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          tags: shoutitbot/api:latest
          target: api
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VCS_REF=$(git rev-parse --short HEAD)
            BUILD_VERSION=latest
        # This ugly bit is necessary if you don't want your cache to grow forever
        # until it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
